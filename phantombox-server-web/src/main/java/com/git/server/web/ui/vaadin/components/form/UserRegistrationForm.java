package com.git.server.web.ui.vaadin.components.form;

import com.git.domain.api.IContact;
import com.git.domain.api.IUser;
import com.git.domain.impl.Contact;
import com.git.domain.impl.User;
import com.git.server.web.ui.vaadin.mediator.UserMediator;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

public class UserRegistrationForm extends CustomComponent {

    private UserMediator userMediator;
    @AutoGenerated
    private GridLayout mainLayout;
    @AutoGenerated
    private Label titleLabel;
    @AutoGenerated
    private TextField loginField;
    @AutoGenerated
    private PasswordField passwordField;
    @AutoGenerated
    private TextField emailField;
    @AutoGenerated
    private TextField nameField;
    @AutoGenerated
    private Button saveButton;
    @AutoGenerated
    private Button cancelButton;
    @AutoGenerated
    private HorizontalLayout actionLayout;

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     * <p/>
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public UserRegistrationForm() {
        buildMainLayout();
        setCompositionRoot(mainLayout);
    }

    /**
     * Constructor with fields.
     *
     * @param userMediator {@link UserMediator}
     */
    public UserRegistrationForm(UserMediator userMediator) {
        buildMainLayout();
        setCompositionRoot(mainLayout);
        this.userMediator = userMediator;
        addListeners();
    }

    private void addListeners() {
        saveButton.addListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent event) {
                IContact contact = new Contact((String) nameField.getValue(), (String) emailField.getValue());
                IUser user = new User((String) loginField.getValue(), (String) passwordField.getValue(), contact);
                userMediator.saveUser(user);
                getWindow().showNotification("Registration",
                    "You are registered!");
            }
        });
    }

    @AutoGenerated
    private HorizontalLayout buildActionLayout() {
        // common part: create layout
        actionLayout = new HorizontalLayout();
        actionLayout.setImmediate(false);
        actionLayout.setWidth("-1px");
        actionLayout.setHeight("-1px");
        actionLayout.setMargin(false);
        actionLayout.setSpacing(true);

        // saveButton
        saveButton = new Button();
        saveButton.setCaption("save");
        saveButton.setImmediate(true);
        saveButton.setWidth("62px");
        saveButton.setHeight("-1px");
        actionLayout.addComponent(saveButton);

        // cancelButton
        cancelButton = new Button();
        cancelButton.setCaption("cancel");
        cancelButton.setImmediate(true);
        cancelButton.setWidth("-1px");
        cancelButton.setHeight("-1px");
        actionLayout.addComponent(cancelButton);

        return actionLayout;
    }

    @AutoGenerated
    private GridLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new GridLayout();
        mainLayout.setCaption("Login");
        mainLayout.setImmediate(false);
        mainLayout.setWidth("300px");
        mainLayout.setHeight("340px");
        mainLayout.setMargin(true);
        mainLayout.setSpacing(true);
        mainLayout.setRows(6);

        // top-level component properties
        setWidth("300px");
        setHeight("340px");

        // titleLabel
        titleLabel = new Label();
        titleLabel.setStyleName("v-label-title");
        titleLabel.setImmediate(false);
        titleLabel.setWidth("-1px");
        titleLabel.setHeight("20px");
        titleLabel.setValue("Registration information");
        mainLayout.addComponent(titleLabel, 0, 0);

        // loginField
        loginField = new TextField();
        loginField.setCaption("Login");
        loginField.setImmediate(false);
        loginField.setWidth("176px");
        loginField.setHeight("-1px");
        loginField.setSecret(false);
        mainLayout.addComponent(loginField, 0, 1);

        // passwordField
        passwordField = new PasswordField();
        passwordField.setCaption("Password");
        passwordField.setImmediate(false);
        passwordField.setWidth("176px");
        passwordField.setHeight("-1px");
        mainLayout.addComponent(passwordField, 0, 2);

        // emailField
        emailField = new TextField();
        emailField.setCaption("Email");
        emailField.setImmediate(false);
        emailField.setWidth("176px");
        emailField.setHeight("-1px");
        emailField.setSecret(false);
        mainLayout.addComponent(emailField, 0, 3);

        // nameField
        nameField = new TextField();
        nameField.setCaption("Name");
        nameField.setImmediate(false);
        nameField.setWidth("176px");
        nameField.setHeight("-1px");
        nameField.setSecret(false);
        mainLayout.addComponent(nameField, 0, 4);

        // actionLayout
        actionLayout = buildActionLayout();
        mainLayout.addComponent(actionLayout, 0, 5);
        mainLayout.setComponentAlignment(actionLayout, new Alignment(33));

        return mainLayout;
    }
}
